plugins {
    id 'base'
    id "com.moowork.node" version "1.3.1"
}

node {
    /* gradle-node-plugin configuration

       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md

       Task name pattern:
           ./gradlew npm_<command> Executes an NPM command.
    */

    version = '11.14.0' // node version
    npmVersion = '6.9.0' // npm version
    download = true // Download the node binary to use for build
}

npm_run_build {
    inputs.files fileTree("public")
    inputs.files fileTree("src")
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
    outputs.dir 'build'
}

assemble.dependsOn npm_run_build

String testsExecutedMarkerName = "${projectDir}/.tests.executed"

task test(type: NpmTask) {
    dependsOn assemble
    description 'Launches the test runner in the interactive watch mode'
    // force Jest test runner to execute tests once and finish the process instead of starting
    // watch mode
    environment CI: 'true'

    args = ['run', 'test']

    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    // allows easy triggering re-tests
    doLast {
        new File(testsExecutedMarkerName).text = 'delete this file to force re-execution JS tests'
    }
    outputs.file testsExecutedMarkerName
}

check.dependsOn test

clean {
    delete testsExecutedMarkerName
}

task start(type: NpmTask) {
    dependsOn npm_run_start
    description 'Runs the app in the development mode'
}